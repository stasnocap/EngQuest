using FluentAssertions;
using Polyglot.Domain.Shared;
using Polyglot.Domain.Vocabulary.Verbs;

namespace Polyglot.Domain.UnitTests.Vocabulary.Verbs;

public class PastFormTests
{
    [Fact]
    public void Is_Should_ReturnTrue_IfVerbEndsWithEd()
    {
        // Arrange
        var pastForm = new Text("played");
        
        // Act
        bool result = PastForm.Is(pastForm);

        // Assert
        result.Should().BeTrue();
    }

    [Theory]
    [InlineData("stop", "stopped")]
    [InlineData("plan", "planned")]
    [InlineData("try", "tried")]
    [InlineData("carry", "carried")]
    [InlineData("play", "played")]
    [InlineData("enjoy", "enjoyed")]
    [InlineData("agree", "agreed")]
    [InlineData("like", "liked")]
    [InlineData("escape", "escaped")]
    [InlineData("accept", "accepted")]
    [InlineData("achieve", "achieved")]
    [InlineData("add", "added")]
    [InlineData("admire", "admired")]
    [InlineData("admit", "admitted")]
    [InlineData("adopt", "adopted")]
    [InlineData("advise", "advised")]
    [InlineData("announce", "announced")]
    [InlineData("appreciate", "appreciated")]
    [InlineData("approve", "approved")]
    [InlineData("argue", "argued")]
    [InlineData("arrive", "arrived")]
    [InlineData("ask", "asked")]
    [InlineData("assist", "assisted")]
    [InlineData("attack", "attacked")]
    [InlineData("bake", "baked")]
    [InlineData("beg", "begged")]
    [InlineData("behave", "behaved")]
    [InlineData("brush", "brushed")]
    [InlineData("bury", "buried")]
    [InlineData("call", "called")]
    [InlineData("challenge", "challenged")]
    [InlineData("change", "changed")]
    [InlineData("chase", "chased")]
    [InlineData("chew", "chewed")]
    [InlineData("clap", "clapped")]
    [InlineData("collect", "collected")]
    [InlineData("compare", "compared")]
    [InlineData("confess", "confessed")]
    [InlineData("construct", "constructed")]
    [InlineData("control", "controlled")]
    [InlineData("copy", "copied")]
    [InlineData("count", "counted")]
    [InlineData("create", "created")]
    [InlineData("cry", "cried")]
    [InlineData("cycle", "cycled")]
    [InlineData("damage", "damaged")]
    [InlineData("dance", "danced")]
    [InlineData("destroy", "destroyed")]
    [InlineData("divide", "divided")]
    [InlineData("drag", "dragged")]
    [InlineData("earn", "earned")]
    [InlineData("employ", "employed")]
    [InlineData("encourage", "encouraged")]
    [InlineData("establish", "established")]
    [InlineData("estimate", "estimated")]
    [InlineData("exercise", "exercised")]
    [InlineData("expand", "expanded")]
    [InlineData("fry", "fried")]
    [InlineData("guess", "guessed")]
    [InlineData("harass", "harassed")]
    [InlineData("hate", "hated")]
    [InlineData("help", "helped")]
    [InlineData("hope", "hoped")]
    [InlineData("identify", "identified")]
    [InlineData("interrupt", "interrupted")]
    [InlineData("introduce", "introduced")]
    [InlineData("irritate", "irritated")]
    [InlineData("joke", "joked")]
    [InlineData("jump", "jumped")]
    [InlineData("kick", "kicked")]
    [InlineData("kill", "killed")]
    [InlineData("kiss", "kissed")]
    [InlineData("laugh", "laughed")]
    [InlineData("lie", "lied")]
    [InlineData("love", "loved")]
    [InlineData("marry", "married")]
    [InlineData("measure", "measured")]
    [InlineData("move", "moved")]
    [InlineData("obey", "obeyed")]
    [InlineData("offend", "offended")]
    [InlineData("paint", "painted")]
    [InlineData("park", "parked")]
    [InlineData("phone", "phoned")]
    [InlineData("pick", "picked")]
    [InlineData("pray", "prayed")]
    [InlineData("print", "printed")]
    [InlineData("pull", "pulled")]
    [InlineData("punch", "punched")]
    [InlineData("punish", "punished")]
    [InlineData("purchase", "purchased")]
    [InlineData("push", "pushed")]
    [InlineData("race", "raced")]
    [InlineData("relax", "relaxed")]
    [InlineData("reply", "replied")]
    [InlineData("retire", "retired")]
    [InlineData("return", "returned")]
    [InlineData("rub", "rubbed")]
    [InlineData("scold", "scolded")]
    [InlineData("select", "selected")]
    [InlineData("smoke", "smoked")]
    [InlineData("snore", "snored")]
    [InlineData("stare", "stared")]
    [InlineData("start", "started")]
    [InlineData("study", "studied")]
    [InlineData("talk", "talked")]
    [InlineData("thank", "thanked")]
    [InlineData("travel", "travelled")]
    [InlineData("trouble", "troubled")]
    [InlineData("type", "typed")]
    [InlineData("use", "used")]
    [InlineData("walk", "walked")]
    [InlineData("want", "wanted")]
    [InlineData("warn", "warned")]
    [InlineData("wink", "winked")]
    [InlineData("worry", "worried")]
    [InlineData("yell", "yelled")]
    [InlineData("allow", "allowed", false)]
    [InlineData("boil", "boiled", false)]
    [InlineData("borrow", "borrowed", false)]
    [InlineData("cheat", "cheated", false)]
    [InlineData("cheer", "cheered", false)]
    [InlineData("clean", "cleaned", false)]
    [InlineData("complain", "complained", false)]
    [InlineData("deliver", "delivered", false)]
    [InlineData("explain", "explained", false)]
    [InlineData("gather", "gathered", false)]
    [InlineData("greet", "greeted", false)]
    [InlineData("listen", "listened", false)]
    [InlineData("murder", "murdered", false)]
    [InlineData("need", "needed", false)]
    [InlineData("offer", "offered", false)]
    [InlineData("open", "opened", false)]
    [InlineData("question", "questioned", false)]
    [InlineData("remember", "remembered", false)]
    [InlineData("visit", "visited", false)]
    [InlineData("wait", "waited", false)]
    public void From_Should_ReturnCorrectPastForm(string verb, string correct, bool stressOnTheFinalSyllable = true)
    {
        // Arrange
        var verbText = new Text(verb);

        // Act
        var pastForm = PastForm.From(verbText, stressOnTheFinalSyllable);

        // Assert
        pastForm.Value.Should().Be(correct);
    }
}
