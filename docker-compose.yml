version: '3.4'

services:
  engquest.web:
    image: ${DOCKER_REGISTRY-}engquestweb
    container_name: EngQuest.Web
    build:
      context: .
      dockerfile: src/EngQuest.Web/Dockerfile
    depends_on:
      - engquest-db
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=5000
      - ASPNETCORE_Kestrel__Certificates__Default__Password=123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    ports:
      - 5000:5000
      - 5001:5001
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
      - ${USERPROFILE}\.aspnet\https:/https/

  engquest-db:
    image: postgres:latest
    container_name: EngQuest.Db
    environment:
      - POSTGRES_DB=engquest
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.containers/database:/var/lib/postgresql/data
    ports:
      - 5432:5432

  engquest-idp:
    image: quay.io/keycloak/keycloak:latest
    container_name: EngQuest.Identity
    command: start-dev --import-realm
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    volumes:
      - ./.containers/identity:/opt/keycloak/data
      - ./.files/engquest-realm-export.json:/opt/keycloak/data/import/realm.json
    ports:
      - 18080:8080

  engquest-seq:
    image: datalust/seq:latest
    container_name: EngQuest.Seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:5341
      - 8081:80

  engquest-redis:
    image: redis:latest
    container_name: EngQuest.Redis
    restart: always
    ports:
      - '6379:6379'