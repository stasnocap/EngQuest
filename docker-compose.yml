services:
  engquest.web:
    image: ${DOCKER_REGISTRY-}engquestweb
    container_name: EngQuest.Web
    build:
      context: .
      dockerfile: src/EngQuest.Web/Dockerfile
    depends_on:
      - engquest-db
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTPS_PORTS=10000
      - ASPNETCORE_Kestrel__Certificates__Default__Password=123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    ports:
      - 10000:10000
    volumes:
      - ${HOME}/.aspnet/https:/https/

  engquest-db:
    image: postgres:latest
    container_name: EngQuest.Db
    environment:
      - POSTGRES_DB=engquest
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.containers/database:/var/lib/postgresql/data
    ports:
      - 5432:5432

  engquest-idp:
    image: quay.io/keycloak/keycloak:latest
    container_name: EngQuest.Identity
    command: start-dev --https-port=8443 --https-certificate-file=/etc/x509/https/keycloak.crt --https-certificate-key-file=/etc/x509/https/keycloak.key
    environment:
      # - KC_HOSTNAME_STRICT=false
      # - KC_HOSTNAME=auth.engquest.by
      # - KC_PROXY=edge
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
    volumes:
      - ./.containers/identity:/opt/keycloak/data
      - ./certs:/etc/x509/https
    ports:
      - 18080:8443

  engquest-seq:
    image: datalust/seq:latest
    container_name: EngQuest.Seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:5341
      - 8081:80

  engquest-redis:
    image: redis:latest
    container_name: EngQuest.Redis
    restart: always
    ports:
      - '6379:6379'
